/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * THIS IS AN EASTER EGG, FEEL FREE TO READ IF
 * IF YOU CAN'T FIND IT USING THE WEBSITE.
 *
 * Hint: The `recursion.ts` file is related.
 */
import { useState, useEffect } from 'react';

export function useRecursion() {
  const [recursionCount, setRecursionCount] = useState(0);

  useEffect(() => {
    if (recursionCount && typeof window !== 'undefined') {
      console.log(`%cüîÅ x ${recursionCount} `, 'font-size: 2rem; ');

      const min = (
        Math.abs(Math.log(2027) - Math.log(2049)) * 1000 -
        1
      ).toFixed(0);

      if (recursionCount === Number(min)) {
        const d = ((s: string) => {
          const ttc = (t: string) =>
            t.split('').map((c: string) => c.charCodeAt(0));
          const astc = (c: any) =>
            ttc(s).reduce((a: number, b: number) => a ^ b, c);
          return (enc: string) =>
            (enc.match(/.{1,2}/g) as RegExpMatchArray)
              .map((hex) => parseInt(hex, 16))
              .map(astc)
              .map((cc) => String.fromCharCode(cc))
              .join('');
        })(recursionCount.toString());

        document
          .querySelector('img[alt="My Avatar"]')
          ?.parentElement?.querySelectorAll('*')
          ?.forEach((element) => {
            const el = element as HTMLSourceElement | HTMLImageElement;

            el.src = el.srcset = d(
              '656075603b686c6066642e6b7164663a6360726437352d2e386b2e35404050526a5b4b5366404340504040405040434040452e337644444440405b40436a404650405b40437240465040624043394049764062404262404a66406d40426e404b764037404554404c404076404554404e664359404535405076402a40444c4051664359404854405476436940474c405476436940474c4069504330404835406276437240494c406b664330404f4c4071504255404b4c407150455540514c407b404543404c76403976446f405066434240446f40594c435850477b4064544334504a4c4450405b40436a404650405b40437240465040624043394049764062404262404a66406d40426e404b764037404554404c404076404554404e664359404535405076402a40444c4051664359404854405476436940474c405476436940474c4069504330404835406276437240494c406b664330404f4c4071504255404b4c407150455540514c407b404543404c76403976446f405066434240446f40594c435850477b4064544334504a4c2e3948404450664054404350407644684040485340504c5340672e4440436e40404048454050444040404040404040404040404040404c47404048444050632e336640484050444040404040565230527b6d2a38786b4b6f406079363062655134346c5357515742392a6238496972776d4637746b50447b727240492e6f49306d4d667242703840775842685638366c5862346874704b796d726a55347171434e723854526b35444365436337772e4440436a434050404540504440404040404040404040404040404044404066504543672e6040406643406940404040456a6e4d575654726a73583867516f3139672e3950404776444340504443404040404040404040404040404040404076484340512e6040406643407940404040422a36657b4a375853484d445848436a45772e3950404c69404040664843407648454350584940404040404040404050484040794444446844474c534c68545353435433465344424c78546f464348454f4250334e4572672e60404066434050404351764533702e35735060702e357b55337b546746606433606a6f4077604b7363676b4f457073526734692a6669304f6e3674516e484f57632a62675050607076656c6930752e7945426c486c337b4e33644467524c6f62666b6c4865714439586b6b443967645374347940743539456f4439432e786c51714d6c54355251557163444a7062442e48796551715057787845447955717055705757647933344c6e7072305773584e436a6a78776e377264566d2e533148405259654e75312e6c48784b6e4c3360746e674e515771603032516953376a7b792a6f4d2e65706f753032704b71597230566e52734262396a365b3075786f69304d766c78654d70334b774b40325274336f324e454254385b6040506239684a3269607258364278655475647754364e37635078346b596b494a4b384857344c3750404f592e404a7b4e74393776452e44727731756957526e434040446e3138797250405863516255705168313348704c504f7270307470496d4b4b43387b527b7b60326043325b532a346f5660304f654d2e76435063634d542a3663384833695962674f4473595244325b4b3368655462333730464934446c6d724766765b635b5771364a382e404c5b7065595865735b406b313130674c7b71702a51305167366d4b646079436276546a355656604b426b396f394b6b67685137792a385838592e7642454c50436077334b6d4f36576f486d30386d794634437939345564384662576f6c5b63575663623543366c604d534f6e3262702a3665386969514b6c723963366e576b6b65785b636756766471467862584e4e76447250702a53435b527835607266796c707969405b6e6a4231367764792e664f306e364e5b584234397b44346d4d68666f6b7849774933747434556a554433765932544e4f6b69696b6d45336d5673706245653445374640666b484851336f74676d424c796a4834546a464432342e465870746436464d59684053565b64574e4544305335456b517b442e2e444042445340404843434048424076404040404040404040404040404340665053446b4445444247434c6c46432e386e40424044424050442e404c5353536869794c523638486d3553656a5b594c776e56315563536733503977503868372e4351495954744e423047494d5534514b4271347568714875486f52556b39596a672e79404067445040424066484540404c40404040404040404040404040405048534468444544454743585b492e3366404840504c43405539407b4c6b4b6c536c4b502a524a55582e674252305b593356505971593453515256782a6e5937606e6f4a32316c78494d6b716b346e6b344f686c6c672e33503c3c',
            );
          });

        console.log('%cü¶àüê¨üé£ - üé•üéâ - üï∏Ô∏è‚öõÔ∏è - üáø1Ô∏è‚É£ - üìç', `font-size: 2rem`);
      }
    }
  }, [recursionCount]);

  function recursion(
    e: React.MouseEvent<HTMLSpanElement> | React.KeyboardEvent<HTMLSpanElement>,
  ) {
    if (typeof window === 'undefined') {
      return;
    }

    let shouldScrollTop = false;

    switch (e.type) {
      case 'click':
        shouldScrollTop = true;
        break;
      case 'keydown':
        if ('key' in e && e.key === 'Enter') {
          shouldScrollTop = true;
        }
        break;
    }

    if (shouldScrollTop) {
      setRecursionCount((current) => current + 1);
      window.scrollTo({ behavior: 'smooth', top: 0, left: 0 });
    }
  }

  return recursion;
}
